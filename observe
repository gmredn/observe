#!/usr/bin/env bash
# observe -- a process invocation observer
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2007-01-19

[ $# -gt 1 ] || {
    cat <<-EOF
	observe -- a process invocation observer
	Usage:
	  observe <hook-file> <command>
	
	Hook rules file format:
	  -->8--
	  #!/usr/bin/env observe
	  hook <command-to-hook> [...]:
	      before=<command to run before the original>
	      replace=<command to run instead>
	      success=<command to run when succeeds>
	      failure=<command to run when fails>
	      after=<command to run after the original>
	  
	  [...]
	  --8<--
	
	An example:
	  -->8--
	  #!/usr/bin/env observe
	  hook gcc cpp cc as ld g++:
	      success=track-compiler "\$@"
	  
	  hook mv cp:
	      success=track-alias "\$@"
	  
	  hook rm:
	      success=forget "\$@"
	  
	  --8<--
	EOF
    exit
}

Hooks=$1; shift
HookDir="$Hooks.d"
if [ -d "$HookDir" ]; then
    EmptyHookDir=false
else
    mkdir -p "$HookDir"
    EmptyHookDir=true
fi
HookDir=`cd "$HookDir" && pwd || echo "$HookDir"`

if $EmptyHookDir || [ "$Hooks" -nt "$HookDir" ]; then
    # generate hook dir from $Hooks
    cat "$Hooks" |
    while read; do
        case "$REPLY" in
	    # read a hook rule
            "hook "*)
            cmds=$REPLY
            cmds=${cmds#hook }
            cmds=${cmds%:*}
            ;;
            *=*)
            event=${REPLY%%=*}
            handler=${REPLY#*=}
            eval "$event='${handler//"'"/"'\\''"}'"
            ;;
            "")
            # generate a hook exe
	    replace=${replace:-'"`basename "$0"`" "$@"'}
            for cmd in $cmds; do
                cat >"$HookDir/$cmd" <<-EOF
		#!/bin/sh
		PATH=\${PATH#$HookDir:}
		PATH=\${PATH%:$HookDir}
		PATH=\${PATH//:${HookDir//\//\\/}:/:}
		$before
		if $replace; then
		    ${success:-:}
		else
		    ${failure:-:}
		fi
		$after
		EOF
		chmod +x "$HookDir/$cmd"
            done
            # cleanup for next rule
            cmds=
            before=
            replace=
            success=
            failure=
            after=
            ;;
        esac
    done
fi

# run the given command in a instrumented environment
OBSERVELVL=$((${OBSERVELVL:-0} + 1)) \
PATH="$HookDir:$PATH" \
"$@"
