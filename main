#!/usr/bin/env bash
# Observe -- a process invocation observer
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2007-01-19
set -e

OBSERVE=`readlink -f "$0"`
OBSERVE_ROOT=`dirname "$OBSERVE"`
: ${OBSERVE_DRIVER:=default}
OBSERVE_DRIVER_ROOT="$OBSERVE_ROOT/$OBSERVE_DRIVER"
OBSERVE_LEVEL=$((${OBSERVE_LEVEL:-0} + 1))
# FIXME: reduce interference
PATH="$OBSERVE_ROOT:$PATH"
export OBSERVE_ROOT OBSERVE_DRIVER_ROOT OBSERVE_LEVEL

version=
while getopts "v" o; do
    case "$o" in
        v)
        case "$verprg" in
            "")      verprg=version ;;
            version) verprg=license ;;
        esac
        ;;
    esac
done
shift $(($OPTIND - 1))

if [ -n "$verprg" ]; then
    $verprg
    exit
fi

# show usage
if [ $# -lt 1 ]; then
    usage
    exit
fi

OBSERVE_RULE=$1; shift
if ! [ -f "$OBSERVE_RULE" -a -r "$OBSERVE_RULE" ]; then
    usage
    false
fi
OBSERVE_HOOKS=`mktemp -d /tmp/observe.XXXXXX`
trap "rm -rf $OBSERVE_HOOKS >&2" EXIT
export OBSERVE_RULE OBSERVE_HOOKS

# compile OBSERVE_RULE to OBSERVE_HOOKS
compile "$OBSERVE_RULE" "$OBSERVE_HOOKS"

if [ -x "$OBSERVE_DRIVER_ROOT/begin" ]; then
    # run in an instrumented environment
    cmd=$1; shift || cmd=$SHELL
    name=`basename "$cmd"`
    "$OBSERVE_DRIVER_ROOT/begin" "$cmd" "$name" "$@"
else
    echo "$OBSERVE_DRIVER: driver unavailable" >&2
fi
